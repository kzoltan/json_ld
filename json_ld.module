<?php
/**
 * @file
 * Module file for the JSON-LD.
 */

/**
 * Implements hook_permission().
 */
function json_ld_permission() {
  return array(
    'configure jsonld' => array(
      'title' => t('Configure JSON-LD'),
      'description' => t('Configure JSON-LD Settings'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function json_ld_menu() {
  $items = array();

  $items['admin/config/search/json-ld'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'JSON-LD',
    'description' => 'Adds JSON-LD to a site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('json_ld_settings_form'),
    'access arguments' => array('configure jsonld'),
    'weight' => 10,
    'file' => 'includes/json_ld.admin.inc',
  );

  return $items;
}

/**
 * Implements template_preprocess_html().
 */
function json_ld_preprocess_html(&$vars) {
  // Base vars.
  global $base_url;
  $jsonld = array();
  $jsonld['@context'] = 'http://schema.org';

  // Grab the variables;
  $query = db_query("SELECT * FROM {variable} WHERE name LIKE 'json_ld_%'");
  foreach ($query->fetchAll() as $result) {
    $json_vars[$result->name] = unserialize($result->value);
  }

  // Load up logo to use later.
  $fids = variable_get('json_ld_site_logo_small', '');
  if (!empty($fids)) {
    $file = file_load($fids);
    // Set the logo array to use later.
    $logo = array(
      '@type' => 'ImageObject',
      'url' => file_create_url($file->uri),
      'height' => $file->height,
      'width' => $file->width,
    );
  }

  $fidl = variable_get('json_ld_site_logo_large', '');
  if (!empty($fidl)) {
    $file = file_load($fidl);
    // Set the logo array to use later.
    $default_image = array(
      '@type' => 'ImageObject',
      'url' => file_create_url($file->uri),
      'height' => $file->height,
      'width' => $file->width,
    );
  }

  // Add name for later use.
  if (variable_get('structured_data_site_name_default', FALSE)) {
    $sitename = variable_get('site_name','');
  }
  else {
    $sitename = variable_get('json_ld_site_name_custom','');
  }

  // Check Current Node.
  $node = menu_get_object();
  if (isset($node)) {
    // Check if the Current node type matches our vars.
    foreach ($json_vars as $name => $value) {
      $check = str_replace('json_ld_node_type_', '', $name);
      if ($node->type == $check && $value) {
        $jsonld['@type'] = variable_get('json_ld_schema_' . $node->type, 'Article');
        $content = variable_get('json_ld_content_' . $node->type, '');
        $image = variable_get('json_ld_image_' . $node->type, '');
      }
    }

    // Main Entity Page Stuff.
    $path = drupal_get_path_alias(current_path());
    $jsonld['mainEntityOfPage'] = array(
      '@type' => 'WebPage',
      '@id' => $base_url . '/' . $path,
    );

    // Title win.
    $jsonld['headline'] = $node->title;

    // Content Image Winz.
    if (!empty($image) && $image != '- None -') {
      $field = field_get_items('node', $node, $image);
      if (!empty($field)) {
        // If multiple, just grab the first and do it.
        if (isset($field[0])) {
          $jsonld['image'] = array(
            '@type' => 'ImageObject',
            'url' => file_create_url($field[0]['uri']),
            'height' => $field[0]['height'],
            'width' => $field[0]['width'],
          );
        }
        else {
          $jsonld['image'] = array(
            '@type' => 'ImageObject',
            'url' => file_create_url($field['uri']),
            'height' => $field['height'],
            'width' => $field['width'],
          );
        }
      }
      else {
        // Default image FTW.
        $jsonld['image'] = $default_image;
      }
    }
    else {
      // Default image FTW.
      $jsonld['image'] = $default_image;
    }

    // Date wins.
    $jsonld['datePublished'] = date('c', $node->created);
    $jsonld['dateModified'] = date('c', $node->changed);

    // Author wins
    $author = user_load($node->uid);
    $jsonld['author'] = array(
      '@type' => 'Person',
      'name' => $author->name,
    );

    // Org publishing trill.
    $jsonld['publisher'] = array(
      '@type' => 'Organization',
      'name' => $sitename,
      'logo' => $logo,
    );

    if (!empty($content) && $content != '- None -') {
      $field = render(field_view_field('node', $node, $content, array('label'=>'hidden')));
      $jsonld['description'] = strip_tags($field);
    }
  }
  // Basic Default Types.
  else {
    // Set the type and address stuffs for general pages.
    $jsonld['@type'] = variable_get('json_ld_business_type', 'Organization');
    $jsonld['address'] = array(
      'streetAddress' => variable_get('json_ld_address', ''),
      'addressLocality' => variable_get('json_ld_city', ''),
      'addressRegion' => variable_get('json_ld_state', ''),
      'postalCode' => variable_get('json_ld_zip', ''),
    );
    $jsonld['telephone'] = variable_get('json_ld_phone', '');

    // Throw in the logo from above.
    $json['logo'] = $logo;

    // Site Name.
    $jsonld['name'] = $sitename;

    // Add urls
    $head_elements = drupal_add_html_head();
    if (!empty($head_elements['metatag_canonical'])) {
      $jsonld['url'] = $head_elements['metatag_canonical']['#value'];
    }
    else {
      $path = drupal_get_path_alias(current_path());
      $jsonld['url'] = $base_url . '/' . $path;
    }
  }

  $json_ld_script = array(
    '#tag' => 'script',
    '#attributes' => array('type' => 'application/ld+json'),
    '#value' => defined('JSON_UNESCAPED_SLASHES') ? json_encode($jsonld, JSON_UNESCAPED_SLASHES) : json_encode($jsonld),
  );

  drupal_add_html_head($json_ld_script, 'structured_data_json_ld');
}
